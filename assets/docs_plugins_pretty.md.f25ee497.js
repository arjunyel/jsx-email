import{_ as e,o as t,c as n,Q as a}from"./chunks/framework.a2f82312.js";const h=JSON.parse('{"title":"Pretty Plugin","description":"The Pretty Plugin","frontmatter":{"title":"Pretty Plugin","description":"The Pretty Plugin","head":[["meta",{"name":"og:description","content":"The Pretty Plugin"}],["meta",{"name":"og:image","content":"https://jsx.email/og.png"}],["meta",{"name":"og:site_name","content":"JSX email"}],["meta",{"name":"og:title","content":"Pretty Plugin"}],["meta",{"name":"og:type","content":"website"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:description","content":"The Pretty Plugin"}],["meta",{"name":"twitter:image","content":"https://jsx.email/og.png"}],["meta",{"name":"twitter:title","content":"Pretty Plugin"}]]},"headers":[],"relativePath":"../../../docs/plugins/pretty.md","filePath":"../../../docs/plugins/pretty.md"}'),i={name:"../../../docs/plugins/pretty.md"},o=a('<h2 id="inline-plugin" tabindex="-1">Inline Plugin <a class="header-anchor" href="#inline-plugin" aria-label="Permalink to &quot;Inline Plugin&quot;">​</a></h2><p>The <code>@jsx-email/plugin-pretty</code> package provides a plugin to format an email&#39;s HTML output in an easy-to-read format. This plugin is a <code>peerDependency</code> of <code>jsx-email</code> and is loaded automatically if the <a href="https://jsx.email/docs/core/render#method-options" target="_blank" rel="noreferrer"><code>pretty</code> render option</a> is set.</p><p>Browse this plugin&#39;s <a href="https://github.com/shellscape/jsx-email/blob/main/packages/plugin-pretty" target="_blank" rel="noreferrer">soure code</a></p><h2 id="why" tabindex="-1">Why <a class="header-anchor" href="#why" aria-label="Permalink to &quot;Why&quot;">​</a></h2><p>Mostly useful for debugging, and in preview environments, prettifying code in general makes it easy to read, nagivate, and look for problems. We don&#39;t recommend using this for production, but it&#39;s very handy for development.</p>',5),r=[o];function s(l,c,p,d,m,g){return t(),n("div",null,r)}const _=e(i,[["render",s]]);export{h as __pageData,_ as default};
